/*
 * Copyright (c) 2020 D4L data4life gGmbH / All rights reserved.
 *
 * D4L owns all legal rights, title and interest in and to the Software Development Kit ("SDK"),
 * including any intellectual property rights that subsist in the SDK.
 *
 * The SDK and its documentation may be accessed and used for viewing/review purposes only.
 * Any usage of the SDK for other purposes, including usage for the development of
 * applications/third-party applications shall require the conclusion of a license agreement
 * between you and D4L.
 *
 * If you are interested in licensing the SDK for your own applications/third-party
 * applications and/or if youâ€™d like to contribute to the development of the SDK, please
 * contact D4L by email to help@data4life.care.
 */

apply plugin: 'maven-publish'

group = LibraryConfig.group

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

javadoc {
    failOnError false
}

publishing {
    repositories {
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/d4l-data4life/hc-sdk-kmp")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("PACKAGE_REGISTRY_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PACKAGE_REGISTRY_TOKEN")
            }
        }

        def target = "file://${project.rootProject.buildDir}/gitPublish"

        maven {
            name = "ReleasePackages"
            url = uri("$target/releases")
        }

        maven {
            name = "SnapshotPackages"
            url = uri("$target/snapshots")
        }

        maven {
            name = "FeaturePackages"
            url = uri("$target/features")
        }
    }
    publications {
        maven(MavenPublication) {

            from(components["java"])
            artifact(tasks["sourcesJar"])
            artifact(tasks["javadocJar"])

            pom {
                name.set(LibraryConfig.name)
                description.set(LibraryConfig.description)
                url.set(LibraryConfig.url)
                inceptionYear.set(LibraryConfig.year)

                scm {
                    connection.set(LibraryConfig.scmConnection)
                    developerConnection.set(LibraryConfig.scmDeveloperConnection)
                    url.set(LibraryConfig.scmUrl)
                }
                licenses {
                    license {
                        name.set("${LibraryConfig.licenseName}")
                        url.set("${LibraryConfig.licenseUrl}")
                        distribution.set("${LibraryConfig.licenseDistribution}")
                    }
                }
                developers {
                    developer {
                        id.set("${LibraryConfig.developerId}")
                        name.set("${LibraryConfig.developerName}")
                        email.set("${LibraryConfig.developerEmail}")
                    }
                }
            }
        }
    }
}
